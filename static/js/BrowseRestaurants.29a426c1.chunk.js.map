{"version":3,"file":"static/js/BrowseRestaurants.29a426c1.chunk.js","mappings":"mPAGaA,GAAmBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sFACb,qBAAGE,MAAkBC,MAAM,OAK9BC,EAAoBJ,EAAAA,GAAAA,IAAH,gIAErB,qBAAGE,MAAkBC,MAAM,MAEb,qBAAGD,MAAkBG,YAAYC,MAK3CC,EAAuBP,EAAAA,GAAAA,IAAH,4HACV,qBAAGE,MAAkBG,YAAYC,M,WCUxD,MArBA,YAA0F,IAA7DE,EAA4D,EAA5DA,QAASC,EAAmD,EAAnDA,WACpC,GAA0BC,EAAAA,EAAAA,MAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAEd,OACE,SAAC,KAAD,WACE,SAAC,KAAD,WACE,UAACR,EAAD,YACE,SAACG,EAAD,WACE,SAAC,KAAD,OAGF,4BACE,SAAC,KAAD,CAAiBM,YAAaL,KAC9B,SAACT,EAAD,CAAkBe,MAAOL,EAAYE,KAAMA,EAAMI,SAAU,SAACC,EAAGC,GAAJ,OAAgBL,EAAQK,iB,sBCA/F,MAhBA,WACE,OACE,SAAC,KAAD,WACE,SAAC,KAAD,WACE,UAACb,EAAD,YACE,SAACG,EAAD,WACE,SAACW,EAAA,EAAD,OAGF,SAACC,EAAA,EAAD,YCEV,MAVA,YAAoF,IAAlDC,EAAiD,EAAjDA,IAChC,OACE,SAAC,KAAD,WACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAOC,SAAS,QAAhB,SAAyBD,SCejC,MAnBA,WACE,IAAQE,GAAMC,EAAAA,EAAAA,KAAND,EACR,GAAkDE,EAAAA,EAAAA,MAApCX,EAAd,EAAQY,KAAmBC,EAA3B,EAA2BA,UAAWC,EAAtC,EAAsCA,QAEtC,OAAID,GACK,SAAC,EAAD,IAGT,OAAIb,QAAJ,IAAIA,GAAAA,EAAaL,QAAQoB,QAChB,SAAC,GAAD,UAAuBf,IAG5Bc,GACK,SAAC,EAAD,CAAwBP,IAAKE,EAAE,oCAGjC,SAAC,EAAD,CAAwBF,IAAKE,EAAE","sources":["views/BrowseRestaurants/BrowseRestaurants.styles.ts","views/BrowseRestaurants/BrowseRestaurants.tsx","views/BrowseRestaurants/BrowseRestaurants.skeleton.tsx","views/BrowseRestaurants/BrowseRestaurants.error.tsx","views/BrowseRestaurants/index.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Pagination } from 'ui/layout';\n\nexport const StyledPagination = styled(Pagination)`\n  margin-top: ${({ theme }) => theme.space[10]};\n  display: grid;\n  place-items: center;\n`;\n\nexport const StyledContentGrid = styled.div`\n  display: grid;\n  gap: ${({ theme }) => theme.space[4]};\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.lg}) {\n    grid-template-columns: 1fr 4fr;\n  }\n`;\n\nexport const StyledFiltersWrapper = styled.div`\n  @media (min-width: ${({ theme }) => theme.breakpoints.lg}) {\n    position: sticky;\n    top: 100px;\n    height: fit-content;\n  }\n`;\n","import { usePageableSearchParams } from 'hooks';\nimport type { ApiPageableResponse, ApiRestaurantBriefDataResponse } from 'types';\nimport { RestaurantsList, RestaurantsFilters } from 'components';\nimport { Container, MainContent } from 'ui/layout';\nimport { StyledPagination, StyledContentGrid, StyledFiltersWrapper } from './BrowseRestaurants.styles';\n\ntype BrowseRestaurantsProps = ApiPageableResponse<ApiRestaurantBriefDataResponse>;\n\nfunction BrowseRestaurants({ content, totalPages }: BrowseRestaurantsProps): JSX.Element {\n  const { page, setPage } = usePageableSearchParams();\n\n  return (\n    <Container>\n      <MainContent>\n        <StyledContentGrid>\n          <StyledFiltersWrapper>\n            <RestaurantsFilters />\n          </StyledFiltersWrapper>\n\n          <div>\n            <RestaurantsList restaurants={content} />\n            <StyledPagination count={totalPages} page={page} onChange={(_, newPage) => setPage(newPage)} />\n          </div>\n        </StyledContentGrid>\n      </MainContent>\n    </Container>\n  );\n}\n\nexport default BrowseRestaurants;\n","import { Container, MainContent } from 'ui/layout';\nimport { RestaurantsFiltersSkeleton } from 'components/RestaurantsFilters';\nimport { RestaurantsListSkeleton } from 'components/RestaurantsList';\nimport { StyledContentGrid, StyledFiltersWrapper } from './BrowseRestaurants.styles';\n\nfunction BrowseRestaurantsSkeleton(): JSX.Element {\n  return (\n    <Container>\n      <MainContent>\n        <StyledContentGrid>\n          <StyledFiltersWrapper>\n            <RestaurantsFiltersSkeleton />\n          </StyledFiltersWrapper>\n\n          <RestaurantsListSkeleton />\n        </StyledContentGrid>\n      </MainContent>\n    </Container>\n  );\n}\n\nexport default BrowseRestaurantsSkeleton;\n","import { Alert, Container, MainContent } from 'ui/layout';\n\ninterface BrowseRestaurantsErrorProps {\n  msg: string;\n}\n\nfunction BrowseRestaurantsError({ msg }: BrowseRestaurantsErrorProps): JSX.Element {\n  return (\n    <Container>\n      <MainContent>\n        <Alert severity=\"error\">{msg}</Alert>\n      </MainContent>\n    </Container>\n  );\n}\n\nexport default BrowseRestaurantsError;\n","import { useTranslation } from 'react-i18next';\nimport { useGetRestaurantsByParsedBingLocation } from 'hooks/api';\nimport BrowseRestaurants from './BrowseRestaurants';\nimport BrowseRestaurantsSkeleton from './BrowseRestaurants.skeleton';\nimport BrowseRestaurantsError from './BrowseRestaurants.error';\n\nfunction BrowseRestaurantsRenderer(): JSX.Element {\n  const { t } = useTranslation();\n  const { data: restaurants, isLoading, isError } = useGetRestaurantsByParsedBingLocation();\n\n  if (isLoading) {\n    return <BrowseRestaurantsSkeleton />;\n  }\n\n  if (restaurants?.content.length) {\n    return <BrowseRestaurants {...restaurants} />;\n  }\n\n  if (isError) {\n    return <BrowseRestaurantsError msg={t(\"Couldn't fetch restaurants...\")} />;\n  }\n\n  return <BrowseRestaurantsError msg={t('No results found...')} />;\n}\n\nexport default BrowseRestaurantsRenderer;\n"],"names":["StyledPagination","styled","Pagination","theme","space","StyledContentGrid","breakpoints","lg","StyledFiltersWrapper","content","totalPages","usePageableSearchParams","page","setPage","restaurants","count","onChange","_","newPage","RestaurantsFilters","RestaurantsList","msg","severity","t","useTranslation","useGetRestaurantsByParsedBingLocation","data","isLoading","isError","length"],"sourceRoot":""}