{"version":3,"file":"static/js/Basket.27bbf4c7.chunk.js","mappings":"iRAEaA,EAAaC,EAAAA,GAAAA,KAAH,uDAEd,qBAAGC,MAAkBC,MAAM,MAGvBC,EAAkBH,EAAAA,GAAAA,IAAH,6GAInB,qBAAGC,MAAkBC,MAAM,M,kECoBpC,EAvB6B,WAC3B,IAAME,GAAWC,EAAAA,EAAAA,MACTC,GAAMC,EAAAA,EAAAA,KAAND,EACAE,GAAgBC,EAAAA,EAAAA,MAAhBD,YAEIE,GACRC,EAAAA,EAAAA,KAAe,SAACC,GAAD,OAAWA,KAD5BC,OAAUH,MAGZ,gDAAO,WAAOI,GAAP,+FAEGN,EAAY,CAAEE,MAAAA,EAAOI,SAAAA,IAFxB,OAGHC,EAAAA,GAAAA,QAAcT,EAAE,2CAHb,gDAKHS,EAAAA,GAAAA,MAAYT,EAAE,mDACVU,eAAyBC,EAAAA,GAAAA,YAC3BC,QAAQC,MAAR,MAPC,yBAUHf,EAASgB,EAAAA,GAAAA,eAVN,4EAAP,uD,iCCAF,EAXmC,WACjC,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAmBC,EAAAA,EAAAA,MAAnBD,gBAERE,EAAAA,EAAAA,YAAU,WACHF,GACHF,EAASK,EAAAA,EAAAA,UAEV,CAACH,K,0CC6DN,MA/DA,WACE,IAAMI,EAAoBC,IAClBtB,GAAMC,EAAAA,EAAAA,KAAND,EACAuB,GAAeL,EAAAA,EAAAA,MAAfK,WACR,GAGIlB,EAAAA,EAAAA,KAAe,SAACC,GAAD,OAAWA,KAF5BkB,EADF,EACEA,gBACUpB,EAFZ,EAEEG,OAAUH,MAEZ,GAAoDqB,EAAAA,EAAAA,IAA4C,CAC9FC,KAAM,WACNC,cAAeH,IAFTI,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,UAAcC,GAApC,YAOA,OAFAC,IAEK3B,EAAM4B,QAKT,SAAC,KAAD,WACE,SAAC,KAAD,WACE,SAAC,MAAD,gBAAcJ,aAAcA,EAAcC,UAAWA,GAAeC,GAApE,cACE,UAACrC,EAAD,CAAYwC,SAAUL,EAAaP,GAAnC,WACE,SAAC,EAAAa,GAAD,UAAKlC,EAAE,iBAEP,SAAC,KAAD,CAAuBmC,OAAQ/B,KAE/B,UAAC,IAAD,YACE,SAAC,EAAAgC,GAAD,CAAIC,GAAG,KAAP,SAAarC,EAAE,uBAEf,SAAC,KAAD,CACEsC,MAAO,CACLC,UAAW,YACXC,SAAU,WACVC,MAAO,eAIb,SAAC,IAAD,WACE,SAAC,KAAD,CACEH,MAAO,CACLI,YAAa,8BACbC,SAAU,2BACVC,WAAY,6BACZC,cAAe,sCAKrB,UAAChD,EAAD,YACE,0BAAOG,EAAE,qBAAsB,CAAE8C,OAAQvB,EAAWwB,mBACpD,SAAC,KAAD,CAAQC,KAAK,SAASC,QAASpB,EAAUqB,aAAzC,SACGlD,EAAE,8BArCR","sources":["views/Basket/Basket.styles.ts","views/Basket/hooks/useHandleOrderSubmit.ts","views/Basket/hooks/useRedirectIfBasketIsEmpty.ts","views/Basket/Basket.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: grid;\n  gap: ${({ theme }) => theme.space[8]};\n`;\n\nexport const StyledBottomBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  gap: ${({ theme }) => theme.space[4]};\n`;\n","import type { CustomerDetailsWithDeliveryAddress } from 'types';\nimport toast from 'react-hot-toast';\nimport { useTranslation } from 'react-i18next';\nimport { useAppSelector, useAppDispatch } from 'hooks';\nimport { usePostNewOrder } from 'hooks/api';\nimport { ENVIRONMENTS } from 'config/constants';\nimport { actions } from 'store/slices/basket.slice';\n\nconst useHandleOrderSubmit = () => {\n  const dispatch = useAppDispatch();\n  const { t } = useTranslation();\n  const { mutateAsync } = usePostNewOrder();\n  const {\n    basket: { order },\n  } = useAppSelector((state) => state);\n\n  return async (customer: CustomerDetailsWithDeliveryAddress) => {\n    try {\n      await mutateAsync({ order, customer });\n      toast.success(t('Thank you! Your order has been placed!'));\n    } catch (err) {\n      toast.error(t('Something went wrong... Please try again later'));\n      if (process.env.NODE_ENV !== ENVIRONMENTS.PRODUCTION) {\n        console.error(err);\n      }\n    } finally {\n      dispatch(actions.clearBasket());\n    }\n  };\n};\n\nexport default useHandleOrderSubmit;\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useBasketHelper } from 'hooks';\nimport { appPaths } from 'routes';\n\nconst useRedirectIfBasketIsEmpty = () => {\n  const navigate = useNavigate();\n  const { basketItemsQty } = useBasketHelper();\n\n  useEffect(() => {\n    if (!basketItemsQty) {\n      navigate(appPaths.root());\n    }\n  }, [basketItemsQty]);\n};\n\nexport default useRedirectIfBasketIsEmpty;\n","import { useForm, FormProvider } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport type { CustomerDetailsWithDeliveryAddress } from 'types';\nimport { useAppSelector, useBasketHelper } from 'hooks';\nimport { DeliveryLocationFormFields, CustomerDetailsFormFields, RestaurantDishesTable } from 'components';\nimport { Container, MainContent } from 'ui/layout';\nimport { H1, H4 } from 'ui/typography';\nimport { Button, FormCol } from 'ui/form';\nimport { StyledForm, StyledBottomBar } from './Basket.styles';\nimport { useHandleOrderSubmit, useRedirectIfBasketIsEmpty } from './hooks';\n\nfunction Basket(): JSX.Element | null {\n  const handleOrderSubmit = useHandleOrderSubmit();\n  const { t } = useTranslation();\n  const { totalValue } = useBasketHelper();\n  const {\n    customerDetails,\n    basket: { order },\n  } = useAppSelector((state) => state);\n  const { handleSubmit, formState, ...formMethods } = useForm<CustomerDetailsWithDeliveryAddress>({\n    mode: 'onChange',\n    defaultValues: customerDetails,\n  });\n\n  useRedirectIfBasketIsEmpty();\n\n  if (!order.length) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <MainContent>\n        <FormProvider handleSubmit={handleSubmit} formState={formState} {...formMethods}>\n          <StyledForm onSubmit={handleSubmit(handleOrderSubmit)}>\n            <H1>{t('Your order')}</H1>\n\n            <RestaurantDishesTable dishes={order} />\n\n            <FormCol>\n              <H4 as=\"h2\">{t('Delivery details')}</H4>\n\n              <CustomerDetailsFormFields\n                names={{\n                  firstName: 'firstName',\n                  lastName: 'lastName',\n                  email: 'email',\n                }}\n              />\n            </FormCol>\n            <FormCol>\n              <DeliveryLocationFormFields\n                names={{\n                  addressLine: 'deliveryAddress.addressLine',\n                  locality: 'deliveryAddress.locality',\n                  postalCode: 'deliveryAddress.postalCode',\n                  countryRegion: 'deliveryAddress.countryRegion',\n                }}\n              />\n            </FormCol>\n\n            <StyledBottomBar>\n              <span>{t('To pay: {{amount}}', { amount: totalValue.humanFriendly })}</span>\n              <Button type=\"submit\" loading={formState.isSubmitting}>\n                {t('Place order')}\n              </Button>\n            </StyledBottomBar>\n          </StyledForm>\n        </FormProvider>\n      </MainContent>\n    </Container>\n  );\n}\n\nexport default Basket;\n"],"names":["StyledForm","styled","theme","space","StyledBottomBar","dispatch","useAppDispatch","t","useTranslation","mutateAsync","usePostNewOrder","order","useAppSelector","state","basket","customer","toast","process","ENVIRONMENTS","console","error","actions","navigate","useNavigate","basketItemsQty","useBasketHelper","useEffect","appPaths","handleOrderSubmit","useHandleOrderSubmit","totalValue","customerDetails","useForm","mode","defaultValues","handleSubmit","formState","formMethods","useRedirectIfBasketIsEmpty","length","onSubmit","H1","dishes","H4","as","names","firstName","lastName","email","addressLine","locality","postalCode","countryRegion","amount","humanFriendly","type","loading","isSubmitting"],"sourceRoot":""}